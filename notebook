1. Gecos 
1.1 Change the normalization of PNG to 256:
<install_dir>/gecos-core/bundles/fr.irisa.cairn.gecos.core.profiling/resources/ProfilingEngine_double/src/ProfilingEngine.cpp       
→ ligne 313 : val = val /256; ( raw normalization is ligne 247, 1024 it’s ok)
1.2 Where the optimization algorithms are: ( already had BRUTE_FORCE, MIN_PLUS_ONE, TABU_SEARCH, maybe can use other method, Bayesian optimization? )
<install_dir>/gecos-float2fix/bundles/fr.irisa.cairn.gecos.typeexploration/src/fr/irisa/cairn/gecos/typeexploration/dse/


2. Documents 
2.1 Documents in linux :
The whole project of bm3d directory : /home/x80054656/eclipse-workspace/projet_xu/BM3D

Some results obtained are in : /home/x80054656/Result

BM3D source code in :  /home/x80054656/projet/bm3d_src (see ./README.txt) 
-Example, run
./BM3Ddenoising cinput.png 10 ImNoisy.png ImBasic.png ImDenoised.png ImDiff.png ImBias.png ImDiffBias.png 1 dct 0 dct 1 opp

/home/x80054656/eclipse-workspace/linux_documents.zip contains all above.
2.11
Algorithm just step 1 with #pragma who works :

This is the source code should replace :
 
/home/x80054656/eclipse-workspace/projet_xu/BM3D/src-c/bm3d.c 
to do exploration

2.12
Bm3d_step1andstep2.c  with #pragma who works :

 This is the source code should replace :
/home/x80054656/eclipse-workspace/projet_xu/BM3D/src-c/bm3d.c 
to do exploration

2.2 Documents in windows :
Generated image at windows : D:\projet_xu (Reference: floating point; fixed-point results with date)
BM3D.c complete without #pragma : 
 
Windows_documents contains : code( bm3d.c without #pragma, calculate SSIM, figure )+generated image 

3. BM3D code
3.1 bm3d.c vs source code in C++
Two options (demo http://demo.ipol.im/demo/l_bm3d/input_select?girl.x=50&girl.y=60) : 
choice of 2d transform and if use standard weight.

I didn’t see the difference, it seemed have almost the same results. For convenient, I didn’t recode the Bior1.5 transform ( two choices DCT or wavelet Bior1.5 transform, I used always the DCT ), and didn’t use the standard deviation weighting (if true, use weight based on the standard variation of the 3D group for the first (resp. second) step, otherwise use the number of non-zero coefficients after Hard Thresholding (resp. the norm of Wiener coefficients))  

 

3.2 Exploration for bm3d_step1 ：
-Do ac_fixed test: 
After commeted #define __GECOS_TYPE_EXPL__, change  #define NBBIT 20
#define NBINT 10, then 	cd /home/x80054656/eclipse-workspace/projet_xu/BM3D/build 
./compile_ac_fixed.sh    (Make sure in compile_ac_fixed.sh already the correct directory /home/x80054656 changed)
./bm3d_ac_fixed

-Exploration by tools:
Should normalize all variables to have a integer part 0-1 !



4. Tips
4.1 Test starting point :
In exploration.properties set accuracyThreshold = 0 to check and set the starting point.

4.2 Generate image optimized fixed point (another fast way) :
Method 1：
	Change .../outputs/bm3d/date(2019-05-03-11:20:27)/exploration/solution/bm3d.c :
--- #include "typedefs.h" before #include "utils.h" #include "io_png.h" 
--- Add variables initialization (tools used $inject when do exploration) BM3D step1: 
	sigma = 10.0f;
	tauMatch[0] = sqrtf(7500.0);
	tauMatch[1] = sqrtf(400.0f);
	lambdaHard3D = 2.1f;
--- Add read image (just for PNG, should change directory, /home/x80054656):
size_t nx, ny, nc;
float* mat_in = io_png_read_f32("/home/x80054656/projet/testimages/i04_gray_01_3.png", &nx, &ny, &nc);
if (!mat_in) {
	printf("error :: %s not found  or not a correct png image \n");
	exit(-1);
}
printf("image size :\n");
printf(" - width          = %d  \n", nx);
printf(" - height         = %d  \n", ny);
printf(" - nb of channels = %d  \n", nc);
    for (int i = 0; i < 384; i++) {
	for (int j = 0; j < 512; j++) {
	Image_in[i][j] = (TYPE_Image_in_87)(mat_in[i * 512 + j] / (float)val_256);
			}
		}
	//Make sure TYPE_Image_in_87should changed be same type as Image_in
for (int i = 0; i < 384; i++) {
		for (int j = 0; j < 512; j++) {
			mat_in[i * 512 + j] = (float)(Image_out[i][j] * val_256);
			}
		}
	if (io_png_write_f32("/home/x80054656/projet/testimages/i04_optimise.png", mat_in, (size_t)nx, (size_t)ny, (size_t)nc) != 0) {
		printf("... failed to save png image ");
		}
The red one is where to save the image!!!
	ProfilingEngine_finalize("profiling-files/");
	Open  < _dir>/projet_xu/BM3D/build/bm3d_solution, replace “OUTPUT= directory correct (example : /home/x80054656/eclipse-workspace/projet_xu/ 
Replace all “/home/x80054656/..”
	cd  < _dir>/projet_xu/BM3D/build/
make -f Makefile_solution bm3d_solution 
./basenlm_solution
(If make: `bm3d_solution' is up to date, remove the old ‘bm3d_solution', then redo abov to update it)
	Image is in where you defined

Method 2：
In /home/x80054656/eclipse-workspace/projet_xu/test_bm3d
-  Copy optimized bm3d.c (in solution directory, example outputs/bm3d/2019-09-05-14:22:45/exploration/solution/ bm3d.c ) replace  <dir>/test/src-c/bm3d.c
-  Copy optimized typedefs.h replace 
<dir>/test/src-c/typedefs.h
-  In bm3d.c    
deleted #include "ProfilingEngine.h", 	ProfilingEngine_start();	ProfilingEngine_finalize("profiling-files/");
add variables initialization and read image
- ./compile_ac_fixed.sh (Make sure in compile_ac_fixed.sh already the correct directory /home/x80054656 changed)
- ./bm3d_ac_fixed
- Image in where you defined


4.3 A website convert color image to gray : https://tu.sioe.cn/gj/huidu/ 

4.4 Python code to calculate PSNR and SSIM (Anaconda3 i.e. python3 was installed in D:\ Anaconda3, use Spyder (Anaconda3) or other python tools to open this files ) :
D:\projet_xu\code\calculate psnr and ssim.py

 
4.5 Python code a figure shows the variables optimized

 

